@model BugTracker.Models.Project

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_AdminLte.cshtml";
}

<h1>Details</h1>

<div>
    <h4>Project</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateCreated)
        </dd>
    </dl>
</div>
<table class="table">
    <tr>
        <th>Title</th>
        <th>Description</th>
        <th>Submitter</th>
        <th>Priority</th>
        <th>Severity</th>
        <th>Date Created</th>
        <th>Developer</th>
    </tr>
    @foreach (var item in Model.Tickets)
    {
<tr>
    <td>
        @*Can just do item.Title, but m => item.Title will format html properly*@
        @Html.DisplayFor(m => item.Title)
    </td>
    <td>
        @Html.DisplayFor(m => item.Description)
    </td>
    <td>
        @Html.DisplayFor(m => item.Submitter)
    </td>
    <td>
        @Html.DisplayFor(m => item.Priority)
    </td>
    <td>
        @Html.DisplayFor(m => item.Severity)
    </td>
    <td>
        @Html.DisplayFor(m => item.DateCreated)
    </td>
    <td>
        @Html.DisplayFor(m => item.Developer)
    </td>
</tr>
    }
</table>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
